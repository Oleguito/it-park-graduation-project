services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
#      ZOOKEEPER_MAX_CNXNS: 100
#      KAFKA_MAX_CONNECTIONS_PER_IP: 100
    ports:
      - 22181:2181
    networks:
      backend: {}

  kafka:
    container_name: kafka
    restart: always
    image: confluentinc/cp-kafka:latest
    # user: 1000
    # group: 1000
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:29092,PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      # Logging
      KAFKA_LOG4J_LOGGERS: "kafka=OFF,org.apache.kafka=OFF"
      KAFKA_LOG4J_ROOT_LOGLEVEL: OFF
      CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_OPTS: "-Dlog4j.configuration=file:/etc/kafka/log4j.properties"
      # KAFKA_LOG4J_LOGGERS: "kafka=OFF,kafka.controller=OFF,kafka.log.LogCleaner=OFF,state.change.logger=OFF,kafka.producer.async.DefaultEventHandler=OFF"
      # KAFKA_LOG4J_ROOT_LOGLEVEL: OFF
      # KAFKA_LOG4J_TOOLS_LOGLEVEL: OFF

    volumes:
      - ./scripts/custom-entrypoint.sh:/scripts/custom-entrypoint.sh:ro
      - ./log4j.properties:/etc/kafka/log4j.properties
    entrypoint: > 
      sh -c "echo 'Running custom entrypoint'; ls -la /scripts; /scripts/custom-entrypoint.sh"
    networks:
      backend: {}

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
      - zookeeper
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      backend: {}
