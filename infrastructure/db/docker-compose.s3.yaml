services:
  minio:
    image: minio/minio
    container_name: minio-minio
    volumes:
      - minio_data:/data
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ['CMD', 'curl', '-sS', 'http://localhost:9000/minio/health/ready']
      interval: 5s
      timeout: 10s
      retries: 120
    networks:
      - minio-net

#  console:
#    image: minio/mc
#    container_name: minio-console
#    ports:
#      - '9002:9002'
#    environment:
#      MINIO_SERVER_URL: 'http://minio:9000'
#      MINIO_ROOT_USER: minioadmin
#      MINIO_ROOT_PASSWORD: minioadmin
#    entrypoint: >
#      /bin/sh -c "
#      mc alias set myminio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD &&
#      while :; do echo 'Minio Console Running'; sleep 600; done;
#      "
#    depends_on:
#      - minio
#    networks:
#      - minio-net

networks:
  minio-net: {}

volumes:
  minio_data:

#services:
#  minio:
#    image: minio/minio
#    container_name: minio-minio
#    volumes:
#      - minio_data:/data
#    ports:
#      - '9000:9000'
#    environment:
#      MINIO_ROOT_USER: minioadmin
#      MINIO_ROOT_PASSWORD: minioadmin
#    command: server /data --console-address ":9001"
#    healthcheck:
#      test: ['CMD', 'esdf', 'ready', 'local']
#      interval: 5s
#      timeout: 10s
#      retries: 120
#    networks:
#      - minio-net
#
#  console:
#    image: minio/mc
#    container_name: minio-console
#    ports:
#      - '9001:9001'
#    environment:
#      CONSOLE_PORT: '9001'
#      CONSOLE_SERVER: 'http://minio:9000'
#      MINIO_ROOT_USER: minioadmin
#      MINIO_ROOT_PASSWORD: minioadmin
#    depends_on:
#      - minio
#    networks:
#      - minio-net
#
#networks:
#  minio-net:
#    driver: bridge
#
#volumes:
#  minio_data:
